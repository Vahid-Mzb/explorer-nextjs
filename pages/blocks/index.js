import React, { useEffect, useState } from "react";
import { useRouter } from "next/router";
import Head from "next/head";
import styles from "@/styles/Home.module.css";
import Header from "@/components/header";
import SearchComp from "@/components/search";
import BocksTrans from "@/components/blocksTrans";
import { faReceipt } from "@fortawesome/free-solid-svg-icons";
import Pagination from "@mui/material/Pagination";
import Stack from "@mui/material/Stack";
function Blocks() {
  const router = useRouter();
  const [data, setData] = useState("1");
  // const initialPage = parseInt(router.query.page, 10) || 1;
  const [page, setPage] = useState(parseInt(router.query.page, 10) || 1);
  const [search, setSearch] = useState(false);

  const myResult = (result) => {
    setSearch(result);
  };

  useEffect(() => {
    // This effect runs whenever the router.query.page changes.
    const handleRouteChange = () => {
      const updatedPage = parseInt(router.query.page, 10) || 1;
      setPage(updatedPage);
    };

    // Immediate call to handleRouteChange to set page based on the current URL
    handleRouteChange();

    // Subscribe to route changes
    router.events.on("routeChangeComplete", handleRouteChange);

    // Clean up event listener
    return () => {
      router.events.off("routeChangeComplete", handleRouteChange);
    };
  }, [router.query.page]);

  const handleChange = (event, value) => {
    // Navigate to the new page and update the URL
    router.push(
      {
        pathname: router.pathname,
        query: { ...router.query, page: value },
      },
      undefined,
      { shallow: true }
    );
    setData(value);
  };

  return (
    <>
      <Head>
        <title>Namada Explorer</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section className={styles.main}>
        <Header />
        <SearchComp myResult={myResult} />
        {/* Your JSX for transactions could go here */}
        {search || (
          <>
            <BocksTrans
              data={data} // Ensure this uses the fetched data
              logo={faReceipt}
              param={"blocks"}
              type={"blocks"}
            />
            {/* Pagination component */}
            <Stack spacing={2} sx={{ bgcolor: "black", p: 2 }}>
              <Pagination
                color="secondary"
                page={page}
                onChange={handleChange}
                count={10000} // Dynamically set this based on total results / items per page
                sx={{
                  "& .MuiPaginationItem-root": {
                    color: "#fff",
                    borderColor: "rgba(255, 255, 255, 0.23)",
                  },
                  // Other styling as before
                }}
              />
            </Stack>
          </>
        )}
      </section>
    </>
  );
}

export default Blocks;
